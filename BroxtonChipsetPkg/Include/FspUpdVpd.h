/** @file

Copyright (c) 2015, Intel Corporation. All rights reserved.<BR>

Redistribution and use in source and binary forms, with or without modification,
are permitted provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this
  list of conditions and the following disclaimer.
* Redistributions in binary form must reproduce the above copyright notice, this
  list of conditions and the following disclaimer in the documentation and/or
  other materials provided with the distribution.
* Neither the name of Intel Corporation nor the names of its contributors may
  be used to endorse or promote products derived from this software without
  specific prior written permission.

  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
  THE POSSIBILITY OF SUCH DAMAGE.

  This file is automatically generated. Please do NOT modify !!!

**/

#ifndef __FSPUPDVPD_H__
#define __FSPUPDVPD_H__

#pragma pack(1)


typedef union {
  UINT32 PadCnf0;
  struct {
    UINT32 GPIOTxState:1; ///< 0      GPIO TX State
    UINT32 GPIORxState:1; ///< 1      GPIO RX State, RO
    UINT32 Reserved1:6;   ///< 2-7    Reserved, RO
    UINT32 GPIORxTxDis:2; ///< 8-9    GPIO RX Disable[9], GPIO TX Disable[8]
    UINT32 PMode:3;       ///< 10-12  Pad Mode, 0h = GPIO Controller controls the Pad; 1h = Native Function 1, if applicable, controls the pad; 2h = Native Function 2, if applicable, controls the pad, etc.
    UINT32 Reserved2:4;   ///< 13-16  Reserved, RO
    UINT32 GPIRout:4;     ///< 17-20  Route to IOxAPIC[20], SCI[19], SMI[18], NMI[17]
    UINT32 RXTXEnCfg:2;   ///< 21-22  RX/TX Enable Config (RXTXEnCfg) RO
    UINT32 RXINV:1;       ///< 23     RX Invert, 0 = No inversion; 1 = Inversion
    UINT32 PreGfRXSel:1;  ///< 24     Pre Glitch Filter Stage RX Pad State Select,  RO, not support in BXT
    UINT32 RxEvCfg:2;     ///< 25-26  0h = Level 1h  = Edge (RxInv=0 for rising edge; 1 for falling edge), 2h  = Disabled ,3h  =  Either rising edge or falling edge
    UINT32 Reserved3:1;   ///< 27     RO
    UINT32 RXRAW1:1;      ///< 28     Override the RX to 1
    UINT32 RXPadStSel:1;  ///< 29     RX Pad State Select
    UINT32 PadRstCfg:2;   ///< 30-31  Pad Reset Config
  } r;
} BL_CONF_PAD0;

typedef union {
  UINT32 PadCnf1;
  struct {
    UINT32 IntSel:7;      ///< 0-6    Interrupt Select. RO
    UINT32 Reserved:1;    ///< 7      Reserved.
    UINT32 IOSTerm:2;     ///< 8-9    I/O Standby Termination (IOSTerm) RW
    UINT32 Term:4;        ///< 10-13  Termination,
                          ///<        0 000: none;0 010: 5k wpd;0 100: 20k wpd;1 000: none;1 001: 1k wpu;1 011: 2k wpu;1 010: 5k wpu;
                          ///<        1 100: 20k wpu;1 101: 1k & 2k wpu;1 111: (optional) Native controller selected by Pad Mode controls the Termination
    UINT32 IOSState:4;    ///< 14-17  I/O Standby State, I/O Standby is not implemented in BXT, RW
    UINT32 CFIOPadCfg:14; ///< 18-31  For BXT, this is done thru Family Register if necessary. RO
  } r;
} BL_CONF_PAD1;

typedef struct {
  BL_CONF_PAD0   PadConfg0;
  BL_CONF_PAD1   PadConfg1;
  UINT8          Community;
  UINT16         MmioAddress;
  BOOLEAN        HostSw;
  BOOLEAN        WakeEnabled;
  CHAR16         *PadName;
} BL_GPIO_PAD_INIT;

typedef struct {
  UINT32  VendorDeviceId;       ///< Codec Vendor/Device ID
  UINT8   RevisionId;           ///< Revision ID of the codec. 0xFF matches any revision.
  UINT8   SdiNo;                ///< SDI number, 0xFF matches any SDI.
  UINT16  DataDwords;           ///< Number of data DWORDs following the header.
  UINT8   FrontPanelSupport;
  UINT8   Padding[3];
} BL_HDA_VERB_TABLE_HEADER;

typedef struct {
  BL_HDA_VERB_TABLE_HEADER     VerbTableHeader;
  UINT32                       VerbTableData[];
} BL_HDAUDIO_VERB_TABLE;



#define FSP_TEMP_RAM_INIT_UPD_SIGNATURE  0x4450555F54505346        /* 'FSPT_UPD' */
#define FSP_MEMORY_INIT_UPD_SIGNATURE    0x4450555F4D505346        /* 'FSPM_UPD' */
#define FSP_SILICON_INIT_UPD_SIGNATURE   0x4450555F53505346        /* 'FSPS_UPD' */
#define FSP_IMAGE_ID                     0x245053464C504124        /* '$APLFSP$' */
#define FSP_IMAGE_REV                    0x00060000 

typedef struct {
/** Offset 0x00A0
    Package
    NOTE: First option is CoPOP if LPDDR3/LPDDR4 is being used. It is SODIMM if DDR3L is being used.
**/
  UINT8                       Package;
/** Offset 0x00A1
    Profile
    Profile list
**/
  UINT8                       Profile;
/** Offset 0x00A2
    MemoryDown
    Memory Down.
**/
  UINT8                       MemoryDown;
/** Offset 0x00A3
    DDR3LPageSize
    NOTE: Only for memory down or downgrade DDR3L frequency.
**/
  UINT8                       DDR3LPageSize;
/** Offset 0x00A4
    DDR3LASR
    NOTE: Only for memory down.
**/
  UINT8                       DDR3LASR;
/** Offset 0x00A5
    ScramblerSupport
    Scrambler Support.
**/
  UINT8                       ScramblerSupport;
/** Offset 0x00A6
    ChannelHashMask
    Channel Hash Mask.
**/
  UINT16                      ChannelHashMask;
/** Offset 0x00A8
    SliceHashMask
    Slice Hash Mask.
**/
  UINT16                      SliceHashMask;
/** Offset 0x00AA
    InterleavedMode
    Interleaved Mode.
**/
  UINT8                       InterleavedMode;
/** Offset 0x00AB
    ChannelsSlicesEnable
    Channels Slices Enable.
**/
  UINT8                       ChannelsSlicesEnable;
/** Offset 0x00AC
    MinRefRate2xEnable
    Provided as a means to defend against Row-Hammer attacks.
**/
  UINT8                       MinRefRate2xEnable;
/** Offset 0x00AD
    DualRankSupportEnable
    Dual Rank Support Enable.
**/
  UINT8                       DualRankSupportEnable;
/** Offset 0x00AE
    DisableFastBoot
    00: Disabled; Used saved training data (if valid)\n01: Enabled; Full re-train of memory.
**/
  UINT8                       DisableFastBoot;
/** Offset 0x00AF
    RmtMode
    Rank Margin Tool Mode.
**/
  UINT8                       RmtMode;
/** Offset 0x00B0
    MemorySizeLimit
    Memory Size Limit: This value is used to restrict the total amount of memory and the calculations based on it. Value is in MB\nExample encodings are: 0x400 = 1GB, 0x800 = 2GB, 0x1000 = 4GB, 0x2000 8GB.
**/
  UINT16                      MemorySizeLimit;
/** Offset 0x00B2
    LowMemoryMaxValue
    Low Memory Max Value: This value is used to restrict the amount of memory below 4GB and the calculations based on it. Value is in MB\nExample encodings are: 0x400 = 1GB, 0x800 = 2GB, 0x1000 = 4GB, 0x2000 8GB.
**/
  UINT16                      LowMemoryMaxValue;
/** Offset 0x00B4
    HighMemoryMaxValue
    High Memory Max Value: This value is used to restrict the amount of memory above 4GB and the calculations based on it. Value is in MB\nExample encodings are: 0x400 = 1GB, 0x800 = 2GB, 0x1000 = 4GB, 0x2000 8GB.
**/
  UINT16                      HighMemoryMaxValue;
/** Offset 0x00B6
    DIMM0SPDAddress
    DIMM0 SPD Address (NOTE: Only for DDR3L only. Please put 0 for MemoryDown.
**/
  UINT8                       DIMM0SPDAddress;
/** Offset 0x00B7
    DIMM1SPDAddress
    DIMM1 SPD Address (NOTE: Only for DDR3L only. Please put 0 for MemoryDown.
**/
  UINT8                       DIMM1SPDAddress;
/** Offset 0x00B8
    Ch0_RankEnable
    NOTE: Only for memory down\n[0] Enable Rank 0:  Must be set to 1 to enable use of this rank.\n[1] Enable Rank 1:  Must be set to 1 to enable use of this rank.
**/
  UINT8                       Ch0_RankEnable;
/** Offset 0x00B9
    Ch0_DeviceWidth
    NOTE: Only for memory down\nDRAM Device Data Width populated on Ranks 0 and 1.
**/
  UINT8                       Ch0_DeviceWidth;
/** Offset 0x00BA
    Ch0_DramDensity
    NOTE: Only for memory down\nDRAM Device Density populated on Ranks 0 and 1.
**/
  UINT8                       Ch0_DramDensity;
/** Offset 0x00BB
    Ch0_Option
    [0] Rank Select Interleaving Enable.  See Address Mapping section for full description.\n0 - Rank Select Interleaving disabled\n1 - Rank Select Interleaving enabled\n[1] Bank Address Hashing Enable.  See Address Mapping section for full description.\n0 - Bank Address Hashing disabled\n1 - Bank Address Hashing enabled\n[3:2] Reserved\n[5:4] This register specifies the address mapping to be used:\n00 - 1KB (A)\n01 - 2KB (B).
**/
  UINT8                       Ch0_Option;
/** Offset 0x00BC
    Ch1_RankEnable
    NOTE: Only for memory down\n[0] Enable Rank 0:  Must be set to 1 to enable use of this rank.\n[1] Enable Rank 1:  Must be set to 1 to enable use of this rank.
**/
  UINT8                       Ch1_RankEnable;
/** Offset 0x00BD
    Ch1_DeviceWidth
    NOTE: Only for memory down\nDRAM Device Data Width populated on Ranks 0 and 1.
**/
  UINT8                       Ch1_DeviceWidth;
/** Offset 0x00BE
    Ch1_DramDensity
    NOTE: Only for memory down\nDRAM Device Density populated on Ranks 0 and 1.
**/
  UINT8                       Ch1_DramDensity;
/** Offset 0x00BF
    Ch1_Option
    [0] Rank Select Interleaving Enable.  See Address Mapping section for full description.\n0 - Rank Select Interleaving disabled\n1 - Rank Select Interleaving enabled\n[1] Bank Address Hashing Enable.  See Address Mapping section for full description.\n0 - Bank Address Hashing disabled\n1 - Bank Address Hashing enabled\n[3:2] Reserved\n[5:4] This register specifies the address mapping to be used:\n00 - 1KB (A)\n01 - 2KB (B).
**/
  UINT8                       Ch1_Option;
/** Offset 0x00C0
    Ch2_RankEnable
    NOTE: Only for memory down\n[0] Enable Rank 0:  Must be set to 1 to enable use of this rank.\n[1] Enable Rank 1:  Must be set to 1 to enable use of this rank.
**/
  UINT8                       Ch2_RankEnable;
/** Offset 0x00C1
    Ch2_DeviceWidth
    NOTE: Only for memory down\nDRAM Device Data Width populated on Ranks 0 and 1.
**/
  UINT8                       Ch2_DeviceWidth;
/** Offset 0x00C2
    Ch2_DramDensity
    NOTE: Only for memory down\nDRAM Device Density populated on Ranks 0 and 1.
**/
  UINT8                       Ch2_DramDensity;
/** Offset 0x00C3
    Ch2_Option
    [0] Rank Select Interleaving Enable.  See Address Mapping section for full description.\n0 - Rank Select Interleaving disabled\n1 - Rank Select Interleaving enabled\n[1] Bank Address Hashing Enable.  See Address Mapping section for full description.\n0 - Bank Address Hashing disabled\n1 - Bank Address Hashing enabled\n[3:2] Reserved\n[5:4] This register specifies the address mapping to be used:\n00 - 1KB (A)\n01 - 2KB (B).
**/
  UINT8                       Ch2_Option;
/** Offset 0x00C4
    Ch3_RankEnable
    NOTE: Only for memory down\n[0] Enable Rank 0:  Must be set to 1 to enable use of this rank.\n[1] Enable Rank 1:  Must be set to 1 to enable use of this rank.
**/
  UINT8                       Ch3_RankEnable;
/** Offset 0x00C5
    Ch3_DeviceWidth
    NOTE: Only for memory down\nDRAM Device Data Width populated on Ranks 0 and 1.
**/
  UINT8                       Ch3_DeviceWidth;
/** Offset 0x00C6
    Ch3_DramDensity
    NOTE: Only for memory down\nDRAM Device Density populated on Ranks 0 and 1.
**/
  UINT8                       Ch3_DramDensity;
/** Offset 0x00C7
    Ch3_Option
    [0] Rank Select Interleaving Enable.  See Address Mapping section for full description.\n0 - Rank Select Interleaving disabled\n1 - Rank Select Interleaving enabled\n[1] Bank Address Hashing Enable.  See Address Mapping section for full description.\n0 - Bank Address Hashing disabled\n1 - Bank Address Hashing enabled\n[3:2] Reserved\n[5:4] This register specifies the address mapping to be used:\n00 - 1KB (A)\n01 - 2KB (B).
**/
  UINT8                       Ch3_Option;
/** Offset 0x00C8
    Ch0_Bit_swizzling
    Channel 0 PHY to DUnit DQ mapping (only used if not 1-1 mapping)Range: 0-32.
**/
  UINT8                       Ch0_Bit_swizzling[32];
/** Offset 0x00E8
    Ch1_Bit_swizzling
    Channel 1 PHY to DUnit DQ mapping (only used if not 1-1 mapping)Range: 0-32.
**/
  UINT8                       Ch1_Bit_swizzling[32];
/** Offset 0x0108
    Ch2_Bit_swizzling
    Channel 2 PHY to DUnit DQ mapping (only used if not 1-1 mapping)Range: 0-32.
**/
  UINT8                       Ch2_Bit_swizzling[32];
/** Offset 0x0128
    Ch3_Bit_swizzling
    Channel 3 PHY to DUnit DQ mapping (only used if not 1-1 mapping)Range: 0-32.
**/
  UINT8                       Ch3_Bit_swizzling[32];
/** Offset 0x0148
**/
  UINT8                       DramReserved;
} DRAM_CONFIG;


typedef struct {
/** Offset 0x0000
**/
  UINT64                      Signature;
/** Offset 0x0008
**/
  UINT8                       Revision;
/** Offset 0x0009
**/
  UINT8                       UnusedUpdSpace0[67];
/** Offset 0x004C
**/
  UINT32                      ReservedTempRamInitUpd;
} TEMP_RAM_INIT_UPD;


typedef struct {
/** Offset 0x0000
**/
  UINT64                      Signature;
/** Offset 0x0008
**/
  UINT8                       Revision;
/** Offset 0x0009
**/
  UINT8                       UnusedUpdSpace0[23];
/** Offset 0x0020
    Debug Serial Port Base
    Debug serial port base address. This option will be used only when the 'Serial Port Debug Device' option is set to 'External Device'.
**/
  UINT32                      SerialDebugPortAddress;
/** Offset 0x0024
    Debug Serial Port Type
    16550 compatible debug serial port resource type. NONE means no serial port support.
**/
  UINT8                       SerialDebugPortType;
/** Offset 0x0025
    Serial Port Debug Device
    Select active serial port device for debug. For SOC UART devices,'Debug Serial Port Base' options will be ignored.
**/
  UINT8                       SerialDebugPortDevice;
/** Offset 0x0026
    Debug Serial Port Stride Size
    Debug serial port register map stride size in bytes.
**/
  UINT8                       SerialDebugPortStrideSize;
/** Offset 0x0027
**/
  UINT8                       UnusedUpdSpace1;
/** Offset 0x0028
    Memory Fast Boot
    Enable/Disable MRC fast boot support.
**/
  UINT8                       MrcFastBoot;
/** Offset 0x0029
**/
  UINT8                       UnusedUpdSpace2[103];
/** Offset 0x0090
    Integrated Graphics Device
    Enable : Enable Integrated Graphics Device (IGD) when selected as the Primary Video Adaptor. Disable: Always disable IGD.
**/
  UINT8                       Igd;
/** Offset 0x0091
    DVMT Pre-Allocated
    Select DVMT 5.0 Pre-Allocated (Fixed) Graphics Memory size used by the Internal Graphics Device.
**/
  UINT8                       IgdDvmt50PreAlloc;
/** Offset 0x0092
    Aperture Size
    Select the Aperture Size used by the Internal Graphics Device.
**/
  UINT8                       IgdApertureSize;
/** Offset 0x0093
    GTT Size
    Select the GTT Size used by the Internal Graphics Device.
**/
  UINT8                       GTTSize;
/** Offset 0x0094
    Primary Display
    Select which of IGD/PCI Graphics device should be Primary Display.
**/
  UINT8                       PrimaryVideoAdaptor;
/** Offset 0x0095
**/
  UINT8                       UnusedUpdSpace3[11];
/** Offset 0x00A0
**/
  DRAM_CONFIG                 DramConfig;
/** Offset 0x0149
**/
  UINT8                       UnusedUpdSpace4[31];
/** Offset 0x0168
    FIT Table Pointer
    FIT table pointer.
**/
  UINT32                      FitTablePtr;
/** Offset 0x016C
    OEM File Loading Address
    Determine the memory base address to load a specified file from CSE file system after memory is available.
**/
  UINT32                      OemLoadingBase;
/** Offset 0x0170
    OEM File Name to Load
    Specify a file name to load from CSE file system after memory is available. Empty indicates no file needs to be loaded.
**/
  UINT8                       OemFileName[16];
/** Offset 0x0180
    GPIO Table Pointer
    GPIO table pointer to a BL_GPIO_PAD_INIT structure.
**/
  BL_GPIO_PAD_INIT*           GpioPadInitTablePtr;
/** Offset 0x0184
**/
  UINT32                      ReservedMemoryInitUpd;
} MEMORY_INIT_UPD;


typedef struct {
/** Offset 0x0000
**/
  UINT64                      Signature;
/** Offset 0x0008
**/
  UINT8                       Revision;
/** Offset 0x0009
**/
  UINT8                       UnusedUpdSpace0[23];
/** Offset 0x0020
    ActiveProcessorCores
    Number of active cores.
**/
  UINT8                       ActiveProcessorCores;
/** Offset 0x0021
    Disable Core1
    Disable/Enable Core1.
**/
  UINT8                       DisableCore1;
/** Offset 0x0022
    Disable Core2
    Disable/Enable Core2.
**/
  UINT8                       DisableCore2;
/** Offset 0x0023
    Disable Core3
    Disable/Enable Core3.
**/
  UINT8                       DisableCore3;
/** Offset 0x0024
    VMX Enable
    Enable or Disable VMX.
**/
  UINT8                       VmxEnable;
/** Offset 0x0025
**/
  UINT8                       UnusedUpdSpace1;
/** Offset 0x0026
    Memory region allocation for Processor Trace
    Memory region allocation for Processor Trace, allowed range is from 4K (0x0) to 128MB (0xF); <b>0xFF: Disable.
**/
  UINT8                       ProcTraceMemSize;
/** Offset 0x0027
    Enable Processor Trace
    Enable or Disable Processor Trace feature.
**/
  UINT8                       ProcTraceEnable;
/** Offset 0x0028
    Eist
    Enable or Disable Intel SpeedStep Technology.
**/
  UINT8                       Eist;
/** Offset 0x0029
    Boot PState
    Boot PState with HFM or LFM. 0: HFM; 1: LFM.
**/
  UINT8                       BootPState;
/** Offset 0x002A
    CPU power states (C-states)
    Enable or Disable CPU power states (C-states). 0: Disable; 1: Enable.
**/
  UINT8                       Cx;
/** Offset 0x002B
    Enhanced C-states
    Enable or Disable Enhanced C-states. 0: Disable; 1: Enable.
**/
  UINT8                       C1e;
/** Offset 0x002C
    Bi-Directional PROCHOT#
    Enable or Disable Bi-Directional PROCHOT#; 0: Disable; 1: Enable.
**/
  UINT8                       BiProcHot;
/** Offset 0x002D
    Max Pkg Cstate
    Max Pkg Cstate. 0:PkgC0C1; 1:PkgC2; 2:PkgC3; 3:PkgC6; 4:PkgC7; 5:PkgC7s; 6:PkgC8; 7:PkgC9; 8:PkgC10; 9:PkgCMax; 254:PkgCpuDefault; 255:PkgAuto. 
**/
  UINT8                       PkgCStateLimit;
/** Offset 0x002E
    Enable C-State
    Enable or Disable C-State. 0:Disable; 1: Enable.
**/
  UINT8                       EnableCx;
/** Offset 0x002F
    C-State auto-demotion
    C-State Auto Demotion. 0:Disable C1 and C3 Auto-demotion; 1:Enable C3/C6/C7 Auto-demotion to C1; 2:Enable C6/C7 Auto-demotion to C3; 3:Enable C6/C7 Auto-demotion to C1 and C3. 
**/
  UINT8                       CStateAutoDemotion;
/** Offset 0x0030
    C-State un-demotion
    C-State un-demotion. 0:Disable C1 and C3 Un-demotion; 1:Enable C1 Un-demotion; 2:Enable C3 Un-demotion; 3:Enable C1 and C3 Un-demotion. 
**/
  UINT8                       CStateUnDemotion;
/** Offset 0x0031
    Max Core C-State
    Max Core C-State. 0:Unlimited;1:C1;2:C3;3:C6;4:C7;5:C8;6:C9;7:C10;8:CCx.
**/
  UINT8                       MaxCoreCState;
/** Offset 0x0032
    Package C-State Demotion
    Enable or Disable Package Cstate Demotion. 0:Disable; 1: Enable.
**/
  UINT8                       PkgCStateDemotion;
/** Offset 0x0033
    Package C-State Un-demotion
    Enable or Disable Package Cstate UnDemotion. 0:Disable; 1: Enable.
**/
  UINT8                       PkgCStateUnDemotion;
/** Offset 0x0034
    Turbo Mode
    Enable or Disable long duration Turbo Mode. 0:Disable; 1: Enable.
**/
  UINT8                       TurboMode;
/** Offset 0x0035
**/
  UINT8                       UnusedUpdSpace2[11];
/** Offset 0x0040
    HD-Audio I/O Buffer Ownership
    Set HD-Audio I/O Buffer Ownership.
**/
  UINT8                       HdAudioIoBufferOwnership;
/** Offset 0x0041
**/
  UINT8                       UnusedUpdSpace3[60];
/** Offset 0x007D
    Enable SD controller
    Enable/disable SD Card controller.
**/
  UINT8                       SdcardEnabled;
/** Offset 0x007E
    Enable SDIO controller
    Enable/disable SDIO controller.
**/
  UINT8                       SdioEnabled;
/** Offset 0x007F
    Enable eMMC controller
    Enable/disable eMMC controller.
**/
  UINT8                       eMMCEnabled;
/** Offset 0x0080
    Enable SATA
    Enable/disable SATA controller.
**/
  UINT8                       EnableSata;
/** Offset 0x0081
    SATA Mode
    Select SATA controller working mode.
**/
  UINT8                       SataMode;
/** Offset 0x0082
    Aggressive SATA LPM Support
    Enable SOC to aggressively enter link power state for SATA.
**/
  UINT8                       SataSalpSupport;
/** Offset 0x0083
    Enable SATA ports
    Enable/disable SATA ports. One byte for each port, byte0 for port0, byte1 for port1, and so on.
**/
  UINT8                       SataPortsEnable[2];
/** Offset 0x0085
    Enable SATA DEVSLP Feature
    Enable/disable SATA DEVSLP per port. 0 is disable, 1 is enable. One byte for each port, byte0 for port0, byte1 for port1, and so on.
**/
  UINT8                       SataPortsDevSlp[2];
/** Offset 0x0087
    Enable PCIE RP
    Enable/disable PCIE Root Ports. 0: disable, 1: enable. One byte for each port, byte0 for port1, byte1 for port2, and so on.
**/
  UINT8                       PcieRpEnable[6];
/** Offset 0x008D
    Configure CLKREQ Number
    Configure Root Port CLKREQ Number if CLKREQ is supported. Each value in array can be between 0-6. One byte for each port, byte0 for port1, byte1 for port2, and so on.
**/
  UINT8                       PcieRpClkReqNumber[6];
/** Offset 0x0093
    Enable USB2 ports
    Enable/disable per USB2 ports. One byte for each port, byte0 for port0, byte1 for port1, and so on.
**/
  UINT8                       PortUsb20Enable[8];
/** Offset 0x009B
    Enable USB3 ports
    Enable/disable per USB3 ports. One byte for each port, byte0 for port0, byte1 for port1, and so on.
**/
  UINT8                       PortUsb30Enable[6];
/** Offset 0x00A1
    Enable XHCI SSIC Eanble
    Enable/disable XHCI SSIC port.
**/
  UINT8                       SsicPortEnable;
/** Offset 0x00A2
    Enable SMBus
    Enable/disable SMBus controller.
**/
  UINT8                       SmbusEnable;
/** Offset 0x00A3
    High Definition Audio Verb Table Pointer
    High Definition Audio Verb Table structure for initialization.
**/
  BL_HDAUDIO_VERB_TABLE*      HdaVerbTablePtr;
/** Offset 0x00A7
**/
  UINT8                       UnusedUpdSpace4[55];
/** Offset 0x00DE
    IPU Enable/Disable
    Enable/Disable IPU Device.
**/
  UINT8                       IpuEn;
/** Offset 0x00DF
    IMGU ACPI mode selection
    0=Auto, 1(Default)=IGFX Child device, 2=ACPI device
**/
  UINT8                       IpuAcpiMode;
/** Offset 0x00E0
**/
  UINT8                       UnusedUpdSpace5[256];
/** Offset 0x01E0
    BMP Logo Data Size
    BMP logo data buffer size.
**/
  UINT32                      LogoSize;
/** Offset 0x01E4
    BMP Logo Data Pointer
    BMP logo data pointer to a BMP format buffer.
**/
  UINT32                      LogoPtr;
/** Offset 0x01E8
    Graphics Configuration Data Pointer
    Graphics configuration data used for initialization.
**/
  UINT32                      GraphicsConfigPtr;
/** Offset 0x01EC
    GT PM Support
    Enable/Disable GT power management support.
**/
  UINT8                       PmSupport;
/** Offset 0x01ED
    RC6(Render Standby)
    Enable/Disable render standby support.
**/
  UINT8                       EnableRenderStandby;
/** Offset 0x01EE
    PAVP Enable
    Enable/Disable Protected Audio Visual Path (PAVP).
**/
  UINT8                       PavpEnable;
/** Offset 0x01EF
    PAVP PR3
    Enable/Disable PAVP PR3
**/
  UINT8                       PavpPr3;
/** Offset 0x01F0
    CdClock Frequency selection
    0: 144 Mhz, 1: 288 Mhz, 2: 384 Mhz, 3: 576 Mhz, 4(Default): 624 Mhz
**/
  UINT8                       CdClock;
/** Offset 0x01F1
    Enable/Disable PeiGraphicsPeimInit
    Enable(Default): Enable PeiGraphicsPeimInit, Disable: Disable PeiGraphicsPeimInit
**/
  UINT8                       PeiGraphicsPeimInit;
/** Offset 0x01F2
**/
  UINT8                       UnusedUpdSpace6[11];
/** Offset 0x01FD
**/
  UINT8                       ReservedSiliconInitUpd;
} SILICON_INIT_UPD;


#pragma pack()

#endif
