/** @file
  The Vfr component for Main menu

;******************************************************************************
;* Copyright (c) 2012 - 2016, Insyde Software Corp. All Rights Reserved.
;*
;* You may not reproduce, distribute, publish, display, perform, modify, adapt,
;* transmit, broadcast, present, recite, release, license or otherwise exploit
;* any part of this publication in any form, by any means, without the prior
;* written permission of Insyde Software Corporation.
;*
;******************************************************************************
*/

#include "KernelSetupConfig.h"

formset
#if FeaturePcdGet(PcdH2OFormBrowserSupported)
  guid     = FORMSET_ID_GUID_MAIN,
#else
  guid     = SYSTEM_CONFIGURATION_GUID,
#endif
  title    = STRING_TOKEN(STR_MAIN_TITLE),
  help     = STRING_TOKEN(STR_BLANK_STRING),
  classguid = SETUP_UTILITY_FORMSET_CLASS_GUID,
  class    = SETUP_UTILITY_CLASS,
  subclass = SETUP_UTILITY_SUBCLASS,
#if defined(SETUP_IMAGE_SUPPORT) && FeaturePcdGet(PcdH2OFormBrowserLocalMetroDESupported)
  image     = IMAGE_TOKEN(IMAGE_MAIN);
#endif

  //
  // Define a Buffer Storage (EFI_IFR_VARSTORE)
  //
  varstore KERNEL_CONFIGURATION,             // This is the data structure type
    varid = CONFIGURATION_VARSTORE_ID,       // Optional VarStore ID
    name  = SystemConfig,                    // Define referenced name in vfr
    guid  = SYSTEM_CONFIGURATION_GUID;       // GUID of this buffer storage

  form
    formid = ROOT_FORM_ID,

    title = STRING_TOKEN(STR_MAIN_TITLE);

#if FeaturePcdGet(PcdMultiConfigSupported)
    grayoutif  TRUE;
      label UPDATE_CONFIG_ID_LABEL;
      label UPDATE_CONFIG_NAME_LABEL;
    endif;
#endif

    grayoutif  TRUE;
      label BIOS_VERSION_LABEL;
      label BIOS_VERSION_END_LABEL;
      label BIOS_BUILD_TIME_LABEL;
    endif;

    grayoutif  TRUE;
      label UPDATE_CPU_TYPE_LABEL;
      label UPDATE_SYSTEM_BUS_SPEED_LABEL;
      label UPDATE_SYSTEM_BUS_SPEED_END_LABEL;

      text
        help   = STRING_TOKEN(STR_BLANK_STRING),
        text   = STRING_TOKEN(STR_SYSTEM_MEMORY_SPEED_STRING),
        text   = STRING_TOKEN(STR_SYSTEM_MEMORY_SPEED_STRING2),
        flags  = 0,
        key    = 0;
    endif;

    grayoutif  TRUE;
      label UPDATE_CACHE_RAM_LABEL;
    endif;

    grayoutif  TRUE;
      text
        help   = STRING_TOKEN(STR_BLANK_STRING),
        text   = STRING_TOKEN(STR_TOTAL_MEMORY_STRING),
        text   = STRING_TOKEN(STR_TOTAL_MEMORY_STRING2),
        flags  = 0,
        key    = 0;
      label UPDATE_INFO_RAM_SLOT_LABEL;
      label MAIN_PAGE_PLATFORM_INFO_LABEL;
    endif;

  //  label SETUP_UTILITY_LANG_MENU;

    //
    // Dummy Language option for Vfr compiler to genernate MainVfrSystemConfigDefault0000[].
    //
    suppressif
      TRUE;
      oneof
        varid       = SystemConfig.Language,
        prompt      = STRING_TOKEN(STR_BLANK_STRING),
        help        = STRING_TOKEN(STR_BLANK_STRING),
        option text = STRING_TOKEN(STR_BLANK_STRING), value = 0, flags = DEFAULT;
      endoneof;
    endif;

    grayoutif
      ideqval SystemConfig.UserAccessLevel == 2
      AND
      ideqval SystemConfig.SetUserPass == 1;

      time
        hour
          //
          // Note that it is a member of NULL, so the RTC will be the system resource to retrieve and save from
          //
          varid       = Time.Hours,
          prompt      = STRING_TOKEN(STR_TIME_PROMPT),
          help        = STRING_TOKEN(STR_TIME_HELP),
          minimum     = 0,
          maximum     = 23,
          step        = 1,
          default     = 0,

        minute
          //
          // Note that it is a member of NULL, so the RTC will be the system resource to retrieve and save from
          //
          varid       = Time.Minutes,
          prompt      = STRING_TOKEN(STR_TIME_PROMPT),
          help        = STRING_TOKEN(STR_TIME_HELP),
          minimum     = 0,
          maximum     = 59,
          step        = 1,
          default     = 0,

        second
          //
          // Note that it is a member of NULL, so the RTC will be the system resource to retrieve and save from
          //
          varid       = Time.Seconds,
          prompt      = STRING_TOKEN(STR_TIME_PROMPT),
          help        = STRING_TOKEN(STR_TIME_HELP),
          minimum     = 0,
          maximum     = 59,
          step        = 1,
          default     = 0,
      endtime;

      date
        year
          //
          // Note that it is a member of NULL, so the RTC will be the system resource to retrieve and save from
          // min and max value won't be stored in IFR binary, but compiler will check if default value is in the range [min, max].
          //
          varid       = Date.Year,
          prompt      = STRING_TOKEN(STR_DATE_PROMPT),
          help        = STRING_TOKEN(STR_DATE_HELP),
          minimum     = PcdGet16 (PcdRealTimeClockYearMin),
          maximum     = PcdGet16 (PcdRealTimeClockYearMax),
          step        = 1,
          default     = PcdGet16 (PcdRealTimeClockInitYear),

        month
          //
          // Note that it is a member of NULL, so the RTC will be the system resource to retrieve and save from
          //
          varid       = Date.Month,
          prompt      = STRING_TOKEN(STR_DATE_PROMPT),
          help        = STRING_TOKEN(STR_DATE_HELP),
          minimum     = 1,
          maximum     = 12,
          step        = 1,
          default     = 5,

        day
          //
          // Note that it is a member of NULL, so the RTC will be the system resource to retrieve and save from
          //
          varid       = Date.Day,
          prompt      = STRING_TOKEN(STR_DATE_PROMPT),
          help        = STRING_TOKEN(STR_DATE_HELP),
          minimum     = 1,
          maximum     = 31,
          step        = 1,
          default     = 1,
      enddate;
    endif;

    label COPYRIGHT_LABEL;

    link;

  endform;

endformset;
